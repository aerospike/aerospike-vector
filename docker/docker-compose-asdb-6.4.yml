version: "3.9"
services:
  aerospike-cluster:
    image: aerospike/aerospike-server-enterprise:6.4.0.26
    container_name: "aerospike-cluster"
    command: --config-file /etc/aerospike/aerospike-6.4.conf
    ports:
      - "3000:3000"
      - "3001:3001"
      - "3002:3002"
      - "3003:3003"
    volumes:
      - ${PWD}/config:/etc/aerospike
    healthcheck:
#      test: [ "CMD", "asinfo", "-U", "admin", "-P", "admin", "-p", "3000", "-v", "build" ]
      test: [ "CMD", "asinfo", "-p", "3000", "-v", "build" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - svc
  aerospike-vector-search:
    image: aerospike/aerospike-vector-search:0.11.1
    container_name: "aerospike-vector-search"
    depends_on:
      aerospike-cluster:
        condition: service_healthy
    ports:
     - "5000:5000"
     - "5040:5040"
    networks:
      - svc
    volumes:
      - ${PWD}/config:/etc/aerospike-vector-search
    healthcheck:
      test: ["CMD", "curl", "-f", "http://aerospike-vector-search:5040/manage/rest/v1"]
      interval: 30s
      timeout: 20s
      retries: 3

#  aerospike-client:
#    image: aerospike/aerospike-tools:10.2.1
#    container_name: "aerospike-client"
#    depends_on:
#      aerospike-cluster:
#        condition: service_healthy
#    command: [
#      "asadm",
#      "-U", "admin",
#      "-P", "admin",
#      "-e", 'enable; manage acl create user tester password psw roles truncate sindex-admin user-admin data-admin read-write read write read-write-udf sys-admin udf-admin',
#      "--no-config-file",
#      "-h", "aerospike-cluster",
#      "-p", "3000"
#    ]
#    networks:
#      - svc

# Services used to monitor the Aerospike Vector Search cluster.
# This collects basic usage metrics so that Aerospike can better understand AVS is being used.
# If you would like to disable this, you can remove the following services.

  update-targets:
    image: python:3.9-alpine
    volumes:
      - ../.internal/metrics/scripts/update_targets.py:/scripts/update_targets.py
      - ../.internal/metrics/config:/config
    entrypoint: ["sh", "-c", "python3 /scripts/update_targets.py"]
    networks:
      - svc

  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ../.internal/metrics/config:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      update-targets:
        condition: service_completed_successfully
      aerospike-vector-search:
        condition: service_healthy
    networks:
      - svc


networks:
  svc:
    name: svc


