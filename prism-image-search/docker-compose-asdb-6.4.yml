services:
  aerospike:
    image: aerospike/aerospike-server-enterprise:6.4.0.26
    ports:
      - "3000:3000"
    networks:
      - avs-demo
    volumes:
      - ./container-volumes/aerospike/etc/aerospike:/opt/aerospike/etc/aerospike
    command:
      - "--config-file"
      - "/opt/aerospike/etc/aerospike/aerospike-6.4.conf"
      # use this line to store all index and vector data in the default namespace (test)
      # - "/opt/aerospike/etc/aerospike/aerospike-single-namespace.conf"
    healthcheck:
#      test: [ "CMD", "asinfo", "-U", "admin", "-P", "admin", "-p", "3000", "-v", "build" ]
      test: [ "CMD", "asinfo", "-p", "3000", "-v", "build" ]
      interval: 5s
      timeout: 20s
      retries: 10
  aerospike-vector-search:
    image: aerospike/aerospike-vector-search:1.0.0
    environment:
      FEATURE_KEY: "${FEATURE_KEY:-./container-volumes/avs/etc/aerospike-vector-search/features.conf}"
    depends_on:
      aerospike:
        condition: service_healthy
    networks:
      - avs-demo
    volumes:
      - ./container-volumes/avs/etc/aerospike-vector-search:/etc/aerospike-vector-search
      - ${FEATURE_KEY:-./container-volumes/avs/etc/aerospike-vector-search/features.conf}:/etc/aerospike-vector-search/features.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://aerospike-vector-search:5040/manage/rest/v1"]
      interval: 5s
      timeout: 20s
      retries: 10
  app:
    image: "aerospike/prism-search-example:latest"
    depends_on: 
      aerospike-vector-search:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - avs-demo
    environment:
      AVS_HOST: aerospike-vector-search
      AVS_PORT: "5000"
      APP_NUM_QUOTES: "5000"
      GRPC_DNS_RESOLVER: native
    volumes:
      - ./container-volumes/prism/images:/prism/static/images/data

# Services used to monitor the Aerospike Vector Search cluster.
# This collects basic usage metrics so that Aerospike can better understand AVS is being used.
# If you would like to disable this, you can remove the following services.

  update-targets:
    image: python:3.9-alpine
    volumes:
      - ../.internal/metrics/scripts/update_targets.py:/scripts/update_targets.py
      - ../.internal/metrics/config:/config
    entrypoint: ["sh", "-c", "python3 /scripts/update_targets.py"]
    networks:
      - avs-demo

  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ../.internal/metrics/config:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      update-targets:
        condition: service_completed_successfully
      aerospike-vector-search:
        condition: service_healthy
    networks:
      - avs-demo

networks:
  avs-demo: {}
